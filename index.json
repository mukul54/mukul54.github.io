
    
    
    
    
    
    
    
    
    
    
    
    [{"authors":null,"categories":null,"content":"I am a Data Scientist at Meesho, where I specialize in modeling Long-Term User Interactions and Product Quality. My current projects involve the application of advanced Machine Learning techniques, including Representation Learning, Natural Language Processing(NLP), Computer Vision, Distributed Tree-Based Methods, and Reinforcement Learning, to derive insightful analytics and predictive models.\nBefore joining Meesho, I worked at Qure.AI, Wadhwani AI, UIUC, UNSW Sydney, and IIST Trivandrum. I have had the honor of publishing my research in prestigious journals and conferences, including the ECCV, Natural Language Processing Journal(Elsevier) and PLOS ONE.\n","date":-62135596800,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":-62135596800,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"","publishdate":"0001-01-01T00:00:00Z","relpermalink":"","section":"authors","summary":"I am a Data Scientist at Meesho, where I specialize in modeling Long-Term User Interactions and Product Quality. My current projects involve the application of advanced Machine Learning techniques, including Representation Learning, Natural Language Processing(NLP), Computer Vision, Distributed Tree-Based Methods, and Reinforcement Learning, to derive insightful analytics and predictive models.","tags":null,"title":"Mukul Ranjan","type":"authors"},{"authors":[],"categories":null,"content":" Click on the Slides button above to view the built-in slides feature. Slides can be added in a few ways:\nCreate slides using Wowchemy’s Slides feature and link using slides parameter in the front matter of the talk file Upload an existing slide deck to static/ and link using url_slides parameter in the front matter of the talk file Embed your slides (e.g. Google Slides) or presentation video on this page using shortcodes. Further event details, including page elements such as image galleries, can be added to the body of this page.\n","date":1906549200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1906549200,"objectID":"a8edef490afe42206247b6ac05657af0","permalink":"https://mukul54.github.io/talk/example-talk/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/talk/example-talk/","section":"event","summary":"An example talk using Wowchemy's Markdown slides feature.","tags":[],"title":"Example Talk","type":"event"},{"authors":null,"categories":["Machine Learning"],"content":"We often read almost everywhere that Lasso regression **encourages zero coefficient, **and hence provide a great tool for variable selection as well but it is really difficult to get the intuition about this. In this article, I have tried to discuss this in detail.\nContents Overfitting and Regularization\nIntuition 1: Optimize a single coefficient model\nIntuition 2: Look at this simple example\nIntuition 3: Observe this beautiful image\nIntuition 4: Probabilistic Interpretation of L1 and L2\nOverfitting and Regularization Overfitting is a phenomenon where a machine learning model is unable to generalize well on the unseen data. When our model is complex(for example polynomial regression with a very high degree or a very deep neural network) and we have less training data, in those cases model tends to memorize the training data and does not generalize well on unseen data.\nLook at this image from Wikipedia in which the green line shows the decision boundary of the overfitted classifier while the black one shows the regularized one. We see that even though the green decision boundary seems to give no training error it won’t generalize well on the unseen data.\nRegularization is one of the ways to reduce the overfitting of a machine learning model by adding the extra penalty to the loss function. The penalty is added in terms of some norms of the parameters. When the loss function of the linear regression model uses the L1 norm of the parameters, the regression model is called Lasso Regression while the one which uses the L2 norms is called Ridge Regression.\nIntuition 1: Optimize a single coefficient model As explained here, consider a Ridge Regression model with a single coefficient β, the equation for the loss function of L2 regression in this can be given as follows:\nTo minimize this equation, we will have to take the derivative w.r.t β and equate it to 0 to get the coefficient’s optimal value.\nWe see from the above equation that for coefficient β to be 0 for non-zero values of x and y, λ→∞. Now let’s look at the case for L1 or lasso regression.\nConsider the case where β\u0026gt;0, and minimize the expression for the L1 loss by differentiating it w.r.t β.\nSimilarly, for β\u0026lt;0, we get the following equation:\nFrom both of the above equations, we see that in the case of L1 regularization, there are infinite possible values of x and y for a given *λ, *for which it is possible for β to be 0. Hence in contrast to Ridge regression, LASSO or L1 Regression encourages 0 coefficients therefore acting as a method of variable selection.\nIntuition 2: Look at this simple example This was the first good intuition that I found related to this topic in Murphy’s, Machine Learning: A Probabilistic Perspective (page no. 431). Consider a set of sparse vector β with two values, β₁ = (1, 0) and another set of dense vector β with two values such as β₂ = (1/√2, 1/√2).\nIn the case of L2 regularization, β₁ and β₂ both assign the same have weight since the L2 norm of both of them is the same.\nBut when we look into the case of L1 regularization, if we look at the L1 norm of the β₁(the sparse vector), we find that it is less than that of β₂(the dense vector) as seen in the following equation.\nHence, this shows that LASSO encourages zero coefficients.\nIntuition 3: Observe this beautiful image Here, we will look at the famous regularization diagram from Hastie’s ESL’s, page no 71.\nI had a really hard time understanding this figure until I came across this wonderful blog by explained.ai. I highly recommend you to look into that and various other blogs from the same author available at the site as well. They are really much more intuitive and well explained. You can find there the code for all the curves used by them as well.\nLet’s look at the following two diagrams from the above-mentioned blogs.\nWe see that the minimum cost in the case of the L1 is given by the purple dot at the diamond tip. As we move on the edge of the diamond, we find ourselves to be moving away from the **black dot **and hence there is a higher cost associated with it, for example, look at the yellow dot on the edge of the diamond. Hence in the case of L1 or LASSO regression, it is more likely to find the optimal parameter values at the tip of the diamond. In contrast to this, let’s look at the case of Ridge regression, i.e the L2 constrained circle; we see that the optimal value of parameters is not on the axis since we get the minimum cost at the purple dot, which is away from the axis. To be more clear, let’s look at another figure from the same blog.\nIntuition 4: Probabilistic Interpretation of L1 and L2 For this part, I assume that you know some basics of the Bayes Theorem. You can look into some of the resources related to it. I will skip a lot of details here. For more details, you can look into the answers to this cross-validated question and this wonderful blog by Brian Keng. Most of the equations and explanations here are from Brian Keng’s blog.\nMaximum log-likelihood …","date":1684116794,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1684116794,"objectID":"a9e7e5e6b5972c00b7d48e2c4b792ce6","permalink":"https://mukul54.github.io/post/l1_vs_l2/","publishdate":"2023-05-14T21:13:14-05:00","relpermalink":"/post/l1_vs_l2/","section":"post","summary":"We often read almost everywhere that Lasso regression **encourages zero coefficient, **and hence provide a great tool for variable selection as well but it is really difficult to get the intuition about this.","tags":["Machine Learning","Regression","Lasso","Ridge"],"title":"How does Lasso regression(L1) encourage zero coefficients but not the L2?","type":"post"},{"authors":["Mukul Ranjan"],"categories":["HDFS","Big Data"],"content":"Hadoop Distributed File System(HDFS) is a distributed file system designed for handling and storing very large files running on clusters of commodity hardware. It is highly fault tolerant, designed to be deployed on low-cost, commodity hardware and It provides a very high throughput by providing parallel data access.\nHDFS instance may consists of hundreds of server machines each storing part of file system data, hence failure of at least one server is inevitable. HDFS has been built to detect these failures and automatically recover them quickly.\nHDFS follows master/slave architecture with **NameNode **as master and **DataNode **as slave. Each cluster comprises a single master node and multiple slave nodes. Internally the files get divided into one or more blocks, and each block is stored on different slave machines depending on the replication factor.\nNameNode It is the hardware that contains the operating system(GNU/Linux) and the NameNode software. It is responsible for serving the client’s read/write requests.\nIt Stores metadata such as number of blocks, their location, permission, replicas and other details on the local disk in the form of two files:\nFSImage(File System Image): It contains the complete namespace of the Hadoop file system since the NameNode creation. Edit log: It contains all the recent changes performed to the file system namespace to the most recent FSImage. NameNode maintains and manages the slave nodes, and assigns tasks to them. It also keeps the status of data node and make sure that it is alive.\nIt can manage the files, control a client’s access to files, and overseas file operating processes such as renaming, opening, and closing files.\nDataNode For every node in the HDFS cluster we locate a DataNode which is hardware consisting operating system(GNU/Linux) and a DataNode software which help to control the data storage of their system as they can perform operations on the file systems if the client requests.\nIt can also create, replicate, and block files when the NameNode instructs.\nSends heartbeat and block report to the NameNode to report its health and the list of block it contains respectively.\nBlocks Internally HDFS split the file into multiple blocks with the default value of 128MB called block.\nRack Rack is the collection of around 40–50 machines (DataNodes) connected using the same network switch. If the network goes down, the whole rack will be unavailable.\nRack Awareness in Hadoop is the concept that chooses DataNodes based on the rack information in the large Hadoop cluster, to improve the network traffic while reading/writing the HDFS file and to store replicas and provide latency and fault tolerance. For the default replication factor of 3, rank awareness algorithm will first store the replica on the local rack, while the second replica will get stored on DataNode in same rank and the third replica will get stored in different rack.\nUnderstanding HDFS Read and Write Operation Read Operation To read from HDFS, the client first communicates with the NameNode for metadata. The NameNode responds with the locations of DataNodes containing blocks. After receiving the DataNodes locations, the client then directly interacts with the DataNodes.\nThe client starts reading data in parallel from the DataNodes based on the information received from the NameNode. The data will flow directly from the DataNode to the client.\nIn the above image we can see that first client interact with Name Node to get the location of DataNode containing blocks B1 and B2. NameNode returns a list of DataNodes for each block. For Block B1 if DataNode D7 fails or data block is corrupted then next node in the list D10 will be picked up. Similarly for Block B2, if DataNode D1 fails or if data blocks are corrupted, then D2 will be picked up.\nFailure Cases can be summarised as follows:\nData block is corrupted: Next node in the list is picked up. Data Node fails: Next node in the list is picked up. That node is not tried for the later blocks. When a client or application receives all the blocks of the file, it combines these blocks into the form of an original file.\nWrite Operation When a client wants to write a file to HDFS, it communicates to the NameNode for metadata. Name Node checks whether file is available or not as well as whether client is authorised or not (performs various checks) and then the NameNode responds with a number of blocks, their location, replicas, and other details. Based on information from NameNode, the client directly interacts with the DataNode.\nIn the above image we see that once client get the list of DataNode, it interact directly with them. Since the default replication factor for a block is 3, NameNode provides 3 DataNodes D1, D2 and D3 for the write request from the client. Data block is written and replicated in these 3 DataNodes and step 3, 4 and 5 will be repeated until whole file is written on HDFS. In case 1 of the Data Node fail, the data is written to the remaining 2 …","date":1684022400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1684022400,"objectID":"bef588c5bfcc3c3a742db233ab749930","permalink":"https://mukul54.github.io/post/hdfs/","publishdate":"2023-05-14T00:00:00Z","relpermalink":"/post/hdfs/","section":"post","summary":"The blog explains the architecture of HDFS (Hadoop Distributed File System) which is used to store large data sets across multiple computers.","tags":["HDFS","Big Data"],"title":"Understanding HDFS Architecture","type":"post"},{"authors":["Akshat Shukla","Chaarvi Bansal","Sushrut Badhe","Mukul Ranjan","Rohitash Chandra"],"categories":null,"content":"","date":1677542400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1677542400,"objectID":"557dc08fd4b672a0c08e0a8cf0c9ff7d","permalink":"https://mukul54.github.io/publication/preprint/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/publication/preprint/","section":"publication","summary":"We first publish a translation of the Bhagavad Gita in Sanskrit using Google Translate. Our framework then compares Google Translate version of Bhagavad Gita with expert translations using sentiment and semantic analysis via BERT-based language models.","tags":["Source Themes"],"title":"An evaluation of Google Translate for Sanskrit to English translation via sentiment and semantic analysis","type":"publication"},{"authors":["Mukul Ranjan","Amrit Saha"],"categories":null,"content":"Supplementary notes can be added here, including code, math, and images.\n","date":1676678400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1676678400,"objectID":"b2b41f30f7f3547adf797cefc4c40c9a","permalink":"https://mukul54.github.io/publication/wadhwani/","publishdate":"2023-02-18T00:00:00Z","relpermalink":"/publication/wadhwani/","section":"publication","summary":"We propose a novel method for tuberculosis screening.","tags":["Computer Vision","Medical Imaging"],"title":"An Ultrasound Video-based AI-assisted Point-of-Care Tool for Tuberculosis Screening","type":"publication"},{"authors":["Ujjwal Upadhyay","Mukul Ranjan","Satish Golla","Swetha Tanamala","Preetham Sreenivas,","Sasank Chilamkurthy","Jeyaraj Pandian","Jason Tarpley"],"categories":null,"content":"Supplementary notes can be added here, including code, math, and images.\n","date":1676678400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1676678400,"objectID":"69425fb10d4db090cfbd46854715582c","permalink":"https://mukul54.github.io/publication/conference-paper/","publishdate":"2023-02-18T00:00:00Z","relpermalink":"/publication/conference-paper/","section":"publication","summary":"We propose a novel method for medical image segmentation for stroke detection and also show the effectiveness of AI solution for fully-automated ASPECT scoring with reduced diagnosis time for a given non-contrast CT (NCCT) Scan.","tags":["Computer Vision","Medical Imaging","ECCV","NCCT Scan"],"title":"Deep-ASPECTS: A Segmentation-Assisted Model for Stroke Severity Measurement","type":"publication"},{"authors":["Mukul Ranjan","Chandan Govind Agrawal"],"categories":null,"content":"Supplementary notes can be added here, including code, math, and images.\n","date":1676678400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1676678400,"objectID":"0f40cf545adf79432be77d9037b7794b","permalink":"https://mukul54.github.io/publication/thesis/","publishdate":"2023-02-18T00:00:00Z","relpermalink":"/publication/thesis/","section":"publication","summary":"We propose a novel method automatic colorization of old Indian movies using GANs and self attention modules.","tags":["Computer Vision","AI Cultural Diversity","Thesis"],"title":"Old Movie Colorization Using Deep Learning Techniques","type":"publication"},{"authors":["Rohitash Chandra","Mukul Ranjan"],"categories":null,"content":"Supplementary notes can be added here, including code, math, and images.\n","date":1661990400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1661990400,"objectID":"966884cc0d8ac9e31fab966c4534e973","permalink":"https://mukul54.github.io/publication/journal-article/","publishdate":"2022-09-01T00:00:00Z","relpermalink":"/publication/journal-article/","section":"publication","summary":"We use advanced language models such as BERT to provide topic modelling of the Upanishads and the Bhagavad Gita. We then map those topics of the Bhagavad Gita and the Upanishads since it is well known that Bhagavad Gita summarizes the key messages in the Upanishads. We also analyse the distinct and overlapping topics amongst the texts and visualise the link of selected texts of the Upanishads with the Bhagavad Gita.","tags":["NLP","Ancient Texts","BERT","Gita","Upanishads"],"title":"Artificial intelligence for topic modelling in Hindu philosophy: Mapping themes between the Upanishads and the Bhagavad Gita","type":"publication"},{"authors":[],"categories":[],"content":"Create slides in Markdown with Wowchemy Wowchemy | Documentation\nFeatures Efficiently write slides in Markdown 3-in-1: Create, Present, and Publish your slides Supports speaker notes Mobile friendly slides Controls Next: Right Arrow or Space Previous: Left Arrow Start: Home Finish: End Overview: Esc Speaker notes: S Fullscreen: F Zoom: Alt + Click PDF Export Code Highlighting Inline code: variable\nCode block:\nporridge = \u0026#34;blueberry\u0026#34; if porridge == \u0026#34;blueberry\u0026#34;: print(\u0026#34;Eating...\u0026#34;) Math In-line math: $x + y = z$\nBlock math:\n$$ f\\left( x \\right) = ;\\frac{{2\\left( {x + 4} \\right)\\left( {x - 4} \\right)}}{{\\left( {x + 4} \\right)\\left( {x + 1} \\right)}} $$\nFragments Make content appear incrementally\n{{% fragment %}} One {{% /fragment %}} {{% fragment %}} **Two** {{% /fragment %}} {{% fragment %}} Three {{% /fragment %}} Press Space to play!\nOne Two Three A fragment can accept two optional parameters:\nclass: use a custom style (requires definition in custom CSS) weight: sets the order in which a fragment appears Speaker Notes Add speaker notes to your presentation\n{{% speaker_note %}} - Only the speaker can read these notes - Press `S` key to view {{% /speaker_note %}} Press the S key to view the speaker notes!\nOnly the speaker can read these notes Press S key to view Themes black: Black background, white text, blue links (default) white: White background, black text, blue links league: Gray background, white text, blue links beige: Beige background, dark text, brown links sky: Blue background, thin dark text, blue links night: Black background, thick white text, orange links serif: Cappuccino background, gray text, brown links simple: White background, black text, blue links solarized: Cream-colored background, dark green text, blue links Custom Slide Customize the slide style and background\n{{\u0026lt; slide background-image=\u0026#34;/media/boards.jpg\u0026#34; \u0026gt;}} {{\u0026lt; slide background-color=\u0026#34;#0000FF\u0026#34; \u0026gt;}} {{\u0026lt; slide class=\u0026#34;my-style\u0026#34; \u0026gt;}} Custom CSS Example Let’s make headers navy colored.\nCreate assets/css/reveal_custom.css with:\n.reveal section h1, .reveal section h2, .reveal section h3 { color: navy; } Questions? Ask\nDocumentation\n","date":1549324800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1549324800,"objectID":"0e6de1a61aa83269ff13324f3167c1a9","permalink":"https://mukul54.github.io/slides/example/","publishdate":"2019-02-05T00:00:00Z","relpermalink":"/slides/example/","section":"slides","summary":"An introduction to using Wowchemy's Slides feature.","tags":[],"title":"Slides","type":"slides"},{"authors":null,"categories":null,"content":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.\nNullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.\nCras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.\nSuspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.\nAliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.\n","date":1461715200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1461715200,"objectID":"e8f8d235e8e7f2efd912bfe865363fc3","permalink":"https://mukul54.github.io/project/example/","publishdate":"2016-04-27T00:00:00Z","relpermalink":"/project/example/","section":"project","summary":"An example of using the in-built project page.","tags":["Deep Learning"],"title":"Example Project","type":"project"},{"authors":null,"categories":null,"content":"","date":1461715200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1461715200,"objectID":"d1311ddf745551c9e117aa4bb7e28516","permalink":"https://mukul54.github.io/project/external-project/","publishdate":"2016-04-27T00:00:00Z","relpermalink":"/project/external-project/","section":"project","summary":"An example of linking directly to an external project website using `external_link`.","tags":["Demo"],"title":"External Project","type":"project"}]